<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-autowire="byName">
	
	<aop:aspectj-autoproxy />
	
	<!-- 
		Q： 为什么切面要和连接点所在的bean定义在一个WebApplicationContext @version 2016年09月13日 16:58
		A: 因为要确保Spring自动代理的Bean（此处即userServiceImpl）要被切面（此处即AopInterceptor）通知到.
		 -->
	<bean id="aopInteceptor" class="com.cmc.interceptors.AopInterceptor" />
	
	<bean id="loginService" class="com.cmc.service.login.LoginServiceImpl" />
	<bean id="mqProducer" class="com.cmc.mq.producer.service.biz.impl.MQProducerBizImpl" />
	
	<bean id="programmerServiceBizImpl" class="com.cmc.programmer.service.biz.impl.ProgrammerServiceBizImpl" />
		
	<bean id="userService" class="com.cmc.user.service.biz.impl.UserServiceImpl">
		<property name="common" value="1" />
		<!-- 引入（ref）bean
			<property name="common" ref="com.cmc.***.**" />
			-->
		<!--
			<constructor-arg ref="springDao" />
			-->
		<constructor-arg index="0" value="2" />  
		<constructor-arg index="1" value="3" />   
	</bean>
	<bean id="permisionService" class="com.cmc.permission.service.biz.impl.PermissionServiceBizImpl" />
	
	<!-- 静态工厂的方法注入 -->
	<bean id="random" class="com.cmc.dp.pattern.factory.StaticFactoryBean" factory-method="createRandom" />
		
	<!-- 实例工厂的方法注入 -->
	<bean id="factoryBean" class="com.cmc.dp.pattern.factory.FactoryBean" />
	<bean id="random1" factory-bean="factoryBean" factory-method="createRandom" />
	
	<bean id="designerDAO" class="com.cmc.designer.service.dao.DesignerDAO">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="designerService" class="com.cmc.designer.service.biz.impl.DesignerServiceBizImpl">
		<property name="designerDAO" ref="designerDAO" />
	</bean>
	
</beans>