<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 配置JMS连接工厂，真正可以产生Connection的ConnectFactory，由JMS服务厂商提供. -->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${mq.brokerURL}" />
		<property name="userName" value="${mq.userName}" />
		<property name="password" value="${mq.password}" />
	</bean>

	<!-- ActiveMQ提供了一个PooledConnectionFactory，通过往其中注入一个ActiveMQConnectionFactory，可以用来将Connection、Session和MessageProducer进行池化，大大减少资源消耗. -->
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<!--依赖的是ActiveMQConnectionFactory而不是SingleConnectionFactory，注意此时不要写成ref="connectionFactory"，否则将会构成ref循环，导致递归太深，造成java.lang.StackOverflowError.
			<property name="connectionFactory" ref="targetConnectionFactory" />
			-->
		<property name="connectionFactory" ref="targetConnectionFactory" />
		<!--
			<property name="maxConnections" value="${mq.pool.maxConnection}" />
			-->
	</bean>
	
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory. -->
	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
		<!-- 目标targetConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory. -->
		<property name="targetConnectionFactory" ref="pooledConnectionFactory" /> 
	</bean>
	
	<!-- 定义消息队列（Queue） -->
	<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息队列的名字 -->
		<constructor-arg>
			<value>${queue.name}</value>
		</constructor-arg>
	</bean>
	
	<!-- 发送消息的目的地（发布订阅模式的一个主题）http://blog.csdn.net/jspamd/article/details/51908456 -->
	<!--  
		<bean id="myDestination" class="org.apache.activemq.command.ActiveMQTopic">  
			<constructor-arg index="0" value="Online.Notice.Topic" />  
		</bean>  
		-->
	
	<!-- 配置JMS模板（Queue），Spring提供的JMS工具类，它发送、接收消息. -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<!-- 启用发布订阅模式   
			 <property name="pubSubDomain" value="true"/>
			-->  
		<!-- 持久化订阅配置   
			<property name="subscriptionDurable" value="true"/>  
			<property name="clientId" value="client_test" />    
			<property name="durableSubscriptionName" value="client_test"/>
			 -->  
		<!--
			<property name="defaultDestinationName" value="${queue.name}" />
			-->
		<property name="defaultDestination" ref="queueDestination" />
		<property name="receiveTimeout" value="10000" />
	</bean>
	
</beans>